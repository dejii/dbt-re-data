version: 2

models:
  - name: test_re_data_row_count
    tests:
      - dbt_utils.equality:
          compare_model: ref('expected_sample_data_row_count')
          compare_columns:
            - right(upper(replace(replace(table_name, '"', ''), '`', '')), 10) as table_name
            - metric
            - value
            - time_window_start
            - time_window_end
            - interval_length_sec

  - name: test_re_data_freshness
    tests:
      - dbt_utils.equality:
          compare_model: ref('expected_sample_data_freshness')
          compare_columns:
            - right(upper(replace(replace(table_name, '"', ''), '`', '')), 10) as table_name
            - metric
            - value
            - time_window_end

  - name: test_re_data_max
    tests:
      - dbt_utils.equality:
          compare_model: ref('expected_sample_data_max')
          compare_columns:
            - right(upper(replace(replace(table_name, '"', ''), '`', '')), 10) as table_name
            - metric
            - value
            - time_window_start
            - time_window_end
            - interval_length_sec

  - name: test_re_data_max_length
    tests:
      - dbt_utils.equality:
          compare_model: ref('expected_sample_data_max_length')
          compare_columns:
            - right(upper(replace(replace(table_name, '"', ''), '`', '')), 10) as table_name
            - metric
            - value
            - time_window_start
            - time_window_end
            - interval_length_sec

  - name: test_re_data_z_score
    tests:
      - dbt_utils.equality:
          compare_model: ref('expected_sample_data_z_score')
          compare_columns:
            - right(upper(replace(replace(table_name, '"', ''), '`', '')), 10) as table_name
            - metric
            - cast (z_score_value * 1000 as integer) as z_score_value
            - time_window_end
            - cast (last_value * 1000 as integer) as last_value
            - cast (last_avg * 1000 as integer) as last_avg
            - cast (last_stddev * 1000 as integer) as last_stddev
            - interval_length_sec

